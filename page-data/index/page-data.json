{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"post":{"edges":[{"node":{"id":"030fe483-a9d4-5a02-ad6e-55167303dc37","fields":{"slug":"/node-js/about_promise_allsettled/"},"excerpt":"Promise.allSettled함수는 iterator의 모든 Promise함수들의 결과가 처리( 또는 )될 때까지 대기한 뒤 결과를 반환하는 함수입니다. 이와 관련된 내용을 알아보려 합니다. Promise.all은 여러개의 함…","frontmatter":{"category":"Node.js","sub_category":null,"title":"Promise.allSettled()","tags":["Typescript","Javascript","Promise","Node.js","es2020"],"date":"Dec 08. 2021"},"timeToRead":4}},{"node":{"id":"eca6947d-a636-53cc-ab74-a9ef0eb3bb6f","fields":{"slug":"/kubernetes/about_pod/"},"excerpt":"CKA를 준비하며 공부하고 있는 내용을 정리해보려고 합니다. 공부 순서대로 정리를 하고 있어서 다소 부족한 부분도 많을 수 있습니다. 파드(Pod)란?  는 쿠버네티스가 만들 수 있는 가장 작은 오브젝트이며, 기본이 되는 배포 …","frontmatter":{"category":"쿠버네티스","sub_category":null,"title":"Pod란?","tags":["Kubernetes","쿠버네티스","Pod","파드","Devops","CKA"],"date":"Sep 21. 2021"},"timeToRead":4}},{"node":{"id":"7dd02f2e-a7f7-500f-9dd0-aba5d47cd80e","fields":{"slug":"/etc/tune-hhkb-bt/"},"excerpt":"해피해킹(HHKB)키보드를 쓴지도 3년 정도 되었습니다. Lindy케이블을 연결하여 매우 만족스럽게 사용하고 있었지만, 있었지만 선이 좀 거추장스러워서\n블루투스 지원 키보드 구매를 고려하고 있었습니다. 우연히 블루투스 튜닝에 대…","frontmatter":{"category":"기타","sub_category":null,"title":"해피해킹 키보드 튜닝하기","tags":["해피해킹","HHKB","키보드"],"date":"Sep 18. 2021"},"timeToRead":2}},{"node":{"id":"1dd7f073-2270-5d5e-95e7-c1cf94b3d05f","fields":{"slug":"/aws/about_vpc/"},"excerpt":"AWS기반의 클라우드 환경을 사용하면 자연스럽게 사용하게 되는 리소스가 바로 입니다. 전반적인 구성요소에 대한 개념을 간단하게 알아봤습니다. VPC (Virtual Private Cloud) 논리적으로 격리된 네트워크를 의미합니…","frontmatter":{"category":"AWS","sub_category":null,"title":"VPC란?","tags":["AWS","VPC","Subnet"],"date":"Apr 11. 2021"},"timeToRead":3}},{"node":{"id":"d6e91943-4ddb-55d6-998a-6776550dcc0f","fields":{"slug":"/basic/about_was/"},"excerpt":"자주 헷갈리는 개념인 와 의 차이점을 알아보았습니다. Web Server  Http 요청이 들어오면 로부터 해석된 HTML문서와 같은 웹페이지를 반환하는 역할을 합니다. 주로 정적(Static)인 데이터를 처리합니다. 종류 Ap…","frontmatter":{"category":"기초","sub_category":null,"title":"Web Server와 WAS","tags":["Webserver","WAS"],"date":"Mar 16. 2021"},"timeToRead":3}},{"node":{"id":"de14d68c-ea0e-50ea-a320-49f49671ff9c","fields":{"slug":"/db/about_index/"},"excerpt":"인덱스를 간단하게 살펴보고 클러스터 인덱스와 넌 클러스터 인덱스를 알아보았습니다. Index란? 추가적인 쓰기와 저장공간을 사용하여 Database 테이블의 검색속도를 높여주는 자료구조입니다. CUD 작업(, , )은 기본적으로…","frontmatter":{"category":"DB","sub_category":null,"title":"DB의 Index","tags":["Database","Index","Cluster Index","Non-Cluster Index","Postgresql"],"date":"Mar 04. 2021"},"timeToRead":4}},{"node":{"id":"de337474-8e5d-5977-9760-47e116a1a0e2","fields":{"slug":"/architecture/about_msa/"},"excerpt":"실무에서 실제로 사용중인 아키텍처 패턴인 MSA에 대하여 간략히 알아보았습니다. MSA(Microservice Architecture)란? Microservice Architecture의 약자로 독립적인 배포가 가능한 서비스들로…","frontmatter":{"category":"Architecture","sub_category":null,"title":"MSA(Microservice Architecture)이란?","tags":["마이크로 서비스","아키텍처","Microservice","Architecture"],"date":"Feb 24. 2021"},"timeToRead":4}},{"node":{"id":"77e413b3-d3cf-5c5d-9835-adca79ee9f80","fields":{"slug":"/dynamo-db/about_dynamodb_ttl/"},"excerpt":"주기적으로 캐싱을 해야 하는 작업이 있어 삽질해본 경험을 공유하려 합니다. 단순하게 Crontab이나 배치 등을 이용하여 처리하는 방법과 Request 단위로 캐싱을 하는 방법을 생각해보았지만, 여러 조건이 존재해서 아래 방법을…","frontmatter":{"category":null,"sub_category":"DynamoDB","title":"TTL을 이용한 DynamoDB Stream Trigger","tags":["AWS","DynamoDB","Event Stream","TTL","Lambda","Serverless"],"date":"Feb 18. 2021"},"timeToRead":3}},{"node":{"id":"3ed1f237-51b7-5489-891e-11811b537569","fields":{"slug":"/architecture/about_event_driven_architecture/"},"excerpt":"최근 기존 구조를 고도화하는 작업을 진행했습니다. 동기 처리되던 로직을 비동기로 변경하면서 EDA(Event Driven Architecture)를 도입하였습니다. 관련된 내용을 정리해보려고 합니다. EDA(Eventt Driv…","frontmatter":{"category":"Architecture","sub_category":null,"title":"EDA(Event Driven Architecture)이란?","tags":["이벤트 드리븐","아키텍처","Event Driven","Architecture"],"date":"Feb 10. 2021"},"timeToRead":5}},{"node":{"id":"4101df36-2877-5e9d-8759-964d910b3e55","fields":{"slug":"/db/about_isolation/"},"excerpt":"격리 수준(isolation level)이란? 격리수준(isolation level)이란 트랜잭션끼리 얼마나 서로 고립되어 있는지를 나타내는 수준입니다. 즉, 한 트랜잭션이 다른 트랜잭션이 변경한 데이터에 대한 접근 강도를 의미…","frontmatter":{"category":"DB","sub_category":null,"title":"Isolation Level이란?","tags":["Database","Transaction","ACID","데이터베이스","트랜잭션","Isolation Level"],"date":"Jan 28. 2021"},"timeToRead":3}},{"node":{"id":"f466f48b-9373-58bf-9576-d534993eef36","fields":{"slug":"/db/about_acid/"},"excerpt":"트랜잭션이란? 여러 작업을 하나로 묶은 작업수행의 논리적 단위입니다. 한 개 이상의 작업으로 구성되며 한 트랜잭션은 모두 실행되거나, 실행되지 않습니다. 트랜잭션의 상태 한 트랜잭션 플로우의 흐름입니다.  Active(활성) 트…","frontmatter":{"category":"DB","sub_category":null,"title":"트랜잭션과 ACID","tags":["Database","Transaction","ACID","데이터베이스","트랜잭션"],"date":"Jan 25. 2021"},"timeToRead":3}},{"node":{"id":"9cf7894b-fbe8-5fb7-9efe-35f0e6757865","fields":{"slug":"/redis/about_redis_2/"},"excerpt":"레디스의 대표적인 특징은 싱글스레드입니다. 왜 싱글스레드로 구성되었는지 알아보았습니다. 레디스가 싱글스레드인 이유? 레디스는 **Event Loop(이벤트루프)**를 이용하여 요청을 수행합니다. 즉, 실제 명령에 대한 작업(Ta…","frontmatter":{"category":"Redis","sub_category":null,"title":"Redis가 싱글스레드인 이유?","tags":["Redis","레디스","싱글스레드","NoSQL"],"date":"Jan 21. 2021"},"timeToRead":4}},{"node":{"id":"d2ed7891-9bcc-5fc4-a395-74e7c14ea4d6","fields":{"slug":"/redis/about_redis_1/"},"excerpt":"개인적으로 가장 좋아하는 NoSQL DBMS가 Redis입니다. 실무에서 기존부터 사용하고 있다 보니 자연스럽게 익숙해진 것 같습니다. 몇몇 특징들을 대충 알고는 있었지만 이번 기회에 자세히 알아보았습니다. 레디스란? Redis…","frontmatter":{"category":"Redis","sub_category":null,"title":"Redis란?","tags":["Redis","레디스","NoSQL"],"date":"Jan 20. 2021"},"timeToRead":3}},{"node":{"id":"fde9d3e8-b99b-5655-a086-2f1157e6c112","fields":{"slug":"/etc/about_roadmap_2021/"},"excerpt":"2021년 버전이 새로 업데이트 되어 포스팅해본다. 아직 한글버전은 준비되지 않은 것 같다. Backend는 변경점이 거의 없고, Devops에는 컨테이너쪽에 내용이 추가되었다. 백엔드 개발자  데브옵스 개발자  Referenc…","frontmatter":{"category":"기타","sub_category":null,"title":"개발자 로드맵 2021","tags":["개발자","로드맵","백엔드","Developer","Roadmap"],"date":"Jan 19. 2021"},"timeToRead":1}},{"node":{"id":"83c03872-b54a-5326-be6a-e4b679362f05","fields":{"slug":"/basic/about_concurrency_and_parallelism/"},"excerpt":"싱글 스레드기반의 프로그램들에 대한 공부를 하던\n먼저 알고 넘어가야할 중요한 개념이라 생각되어 정리를 해보았다. 동시성 (Concurrency) 동시에 실행되는 것처럼 보이는 것. Time-sharing 알고리즘(시분할 등)을 …","frontmatter":{"category":"기초","sub_category":null,"title":"동시성과 병렬성","tags":["동시성","병렬성","Concurrency","Parallelism"],"date":"Jan 18. 2021"},"timeToRead":1}},{"node":{"id":"84295a79-b3a0-5689-9bea-5ef0f6735f21","fields":{"slug":"/typescript/about_typescript_4_1/"},"excerpt":"11월 19일 Typescript 4.1이 릴리즈되었다. 한달이 지난 시점이지만, 대략적인 내용을 정리해 보았다. Template Literal Types String literal types 에서는 문자열 나열형태의 타입을 지…","frontmatter":{"category":"Typescript","sub_category":null,"title":"Typescript 4.1","tags":["Typescript"],"date":"Dec 12. 2020"},"timeToRead":5}},{"node":{"id":"e06f8afa-0270-5e4e-8bfe-dc8898c890cb","fields":{"slug":"/etc/kakao_2020/"},"excerpt":"if(Kakao) 2020 매년 카카오에서 진행하는 개발자 컨퍼런스이다. 추첨을 통해 제한된 인원만 참석할 수 있었는데, 올해는 언택트로 진행되어 너무 편하게 참여할 수 있었다. 기분탓인지 모르겟지만 오프라인때보다 더 많은 세션…","frontmatter":{"category":"기타","sub_category":null,"title":"[컨퍼런스] if(kakao) 2020","tags":["컨퍼런스","카카오","Kakao","if_kakao_2020"],"date":"Dec 04. 2020"},"timeToRead":3}},{"node":{"id":"c50d069f-0515-5f54-bead-f9f626838a00","fields":{"slug":"/etc/devday_2020/"},"excerpt":"지인의 추천으로 팀에서 진행한 발표내용을 보게되었다. 이를 보고 간략하게 느낌 부분을 적어보려 한다. Devday2020 Devday2020 에서 언택트로 진행한 개발자 컨퍼런스이다. 아쉽게도 일본 시장을 대상으로 잡고 진행한 …","frontmatter":{"category":"기타","sub_category":null,"title":"[컨퍼런스] Devday 2020","tags":["컨퍼런스","라인","Line","Devday2020"],"date":"Nov 30. 2020"},"timeToRead":2}},{"node":{"id":"31b1d5fd-f8d3-59e7-a961-23c46482a697","fields":{"slug":"/docker/docker_question/"},"excerpt":"지속적으로 업데이트할 예정입니다.  도커와 관련된 용어들을 정리해본다. Docker 기존의 VM(Vertual Machine)처럼 하드웨어 기반 가상화가 아닌 커널을 공유하는 프로세스 기반 가상화 방법이다. Host OS 위  …","frontmatter":{"category":"Docker","sub_category":null,"title":"도커 용어 정리","tags":["도커","Docker","면접","면접질문"],"date":"Nov 11. 2020"},"timeToRead":1}},{"node":{"id":"c6bb16c2-0994-531a-bfcb-f81118211b14","fields":{"slug":"/typescript/about_enum/"},"excerpt":"은 Javascript와 Typescript와의 여러가지 차이점 중 한가지이다. 다양한 시스템 언어들이 Enum을 사용하고 있기 때문에 굳이 자세히 설명하지 않아도 될 것 같다. Enum Enum 타입을 사용하는 이유는 다양하다…","frontmatter":{"category":"Typescript","sub_category":null,"title":"Enum","tags":["Typescript","Enum"],"date":"Oct 28. 2020"},"timeToRead":2}},{"node":{"id":"ce8e500e-084d-56c1-8225-0e95f2732658","fields":{"slug":"/typescript/about_closure/"},"excerpt":"Closure는 JS의 특징을 말할 때 필수적으로 나오는 요소이다. 이와 Typescript의 연관성 및 특징을 알아보려고 한다. 클로저 (Closure) Goggle에 검색만 해도 잔뜩나와서 (Chain Smokers를 포함해…","frontmatter":{"category":"Typescript","sub_category":null,"title":"Closure와 Private","tags":["Typescript","Javascript","Closure","Private"],"date":"Oct 24. 2020"},"timeToRead":4}},{"node":{"id":"8694ca51-d75a-5847-8139-d76ce18d7630","fields":{"slug":"/node-js/about_node_js_5/"},"excerpt":"간단한 예제 코드를 이용하여 싱글스레드의 특징을 알아보려한다. 예제 코드 암호화 함수인 와 통신을 이용한 예제를 바탕으로 Node.js의 비동기 처리방법을 파악해보려고 한다. pbkdf2 모듈에 포함된 함수로 상당한 CPU작업을…","frontmatter":{"category":"Node.js","sub_category":null,"title":"Node.js의 I/O 동작","tags":["Node.js","Javascript","V8","Single Thread","싱글스레드"],"date":"Oct 21. 2020"},"timeToRead":7}},{"node":{"id":"ed5c0794-373c-5404-b987-02e774613009","fields":{"slug":"/etc/about_roadmap_2020/"},"excerpt":"꾸준히 업데이트되고 있는 로드맵이다. 해외 개발자들이 오픈소스로 정리하고 배포하는 프로젝트인데 한글로 번역된 내용이 있어서 올려본다. 무조건 정답이라고 할 순 없지만 충분히 도움이 되는 것 같다. (다른 파트 로드맵은… 사이트에…","frontmatter":{"category":"기타","sub_category":null,"title":"개발자 로드맵","tags":["개발자","로드맵","백엔드","Developer","Roadmap"],"date":"Oct 13. 2020"},"timeToRead":1}},{"node":{"id":"119743d2-cfe8-58b6-9f13-4d4f49c78cbd","fields":{"slug":"/node-js/about_node_js_4/"},"excerpt":"앞서서 Node.js의 비동기처리에 대한 전반적인 내용을 정리했다. 이번엔 싱글만레드의 특징을 정리하려 한다. + 정말… 해도해도 공부할 내용이 끝이 없다. 얼마나 대충쓰고 있었는지 반성한다… 싱글 스레드 (Single Thre…","frontmatter":{"category":"Node.js","sub_category":null,"title":"Node.js의 스레드","tags":["Node.js","Javascript","V8","Single Thread","싱글스레드"],"date":"Oct 13. 2020"},"timeToRead":3}},{"node":{"id":"ec29c225-f5e9-5310-b3b3-156487bfe297","fields":{"slug":"/node-js/about_node_js_3/"},"excerpt":"기본적인 Node.js의 비동기 처리에 대하여 정리해보았다. 비동기 처리에 있어서 단골로 등장하는 키워드인 을 정리해보려고 한다. 정의 동기(Sync) / 비동기(Async) 처리해야 할 작업들에 대한 처리과정. 두 가지 이상의…","frontmatter":{"category":"Node.js","sub_category":null,"title":"비동기와 논블로킹","tags":["Node.js","Javascript","V8","Non-Blocking","Async I/O","libuv"],"date":"Oct 12. 2020"},"timeToRead":6}},{"node":{"id":"ef5ad120-dfde-5d83-a699-1247847db9c4","fields":{"slug":"/node-js/about_node_js_package_top10/"},"excerpt":"좀 … 이른감이 있지만 몇몇 해외블로그에서 TOP 10을 정리한 글이 있어서 정리해본다.  NPM Package TOP 10 Express 가장 유명한 Server Framework가 아닐까? PM2 대표적인 Node.js Ap…","frontmatter":{"category":"Node.js","sub_category":null,"title":"2020 TOP 10 Node.js Package & Framework","tags":["Node.js","Javascript","Typescript","NPM","Framework","Express"],"date":"Oct 12. 2020"},"timeToRead":4}},{"node":{"id":"ece4b4ee-295a-5e1b-a122-6139f016e632","fields":{"slug":"/node-js/about_node_js_2/"},"excerpt":"자바스크립트 V8엔진과 Node.js 런타임을 기반으로 비동기처리가 어떻게 처리되는지 이벤트 루프의 동작방식등을 정리한다. 이벤트 루프 이벤트 루프는 콜 스택과 큐를 감시하며 비어있는 콜 스택에 작업을 넣는 작업(Tick)을 수…","frontmatter":{"category":"Node.js","sub_category":null,"title":"Node.js의 이벤트 루프와 비동기","tags":["Node.js","Javascript","V8","EventLoop"],"date":"Oct 08. 2020"},"timeToRead":5}},{"node":{"id":"e1f06ad9-acd5-53dc-a6de-a4041661d77d","fields":{"slug":"/node-js/about_node_js_1/"},"excerpt":"Node.js를 이용하고 개발을 하면서 너무나 자연스럽게 callback 을 다루면서 callback헬 을 겪었다. 본격적으로 Promise를 이용한 비동기 처리를 배우고 async/await 를 사용하여 편리하게 비동기 처리를…","frontmatter":{"category":"Node.js","sub_category":null,"title":"Node.js의 구조","tags":["Node.js","Javascript","V8","EventLoop"],"date":"Oct 06. 2020"},"timeToRead":3}},{"node":{"id":"c716a737-eaa2-5202-9693-a312c71b82d7","fields":{"slug":"/db/about_lock/"},"excerpt":"교착상태(Dead Lock)란?  모든 프로세스가 대기 상태이며 각 프로세스가 다른 프로세스가 가지고 있는 자원을 기다리고 있으면  라고 한다. 데이터베이스 관점에서는 트랜젝션간 발생하는 것을 의미하며, 두 개의 트랜젝션이 각각…","frontmatter":{"category":"DB","sub_category":null,"title":"DB의 Lock/DeadLock","tags":["Database","Lock","DeadLock","교착상태","Postgresql"],"date":"Sep 28. 2020"},"timeToRead":4}},{"node":{"id":"cb441b59-03f6-50a7-b521-2c8b74f2814c","fields":{"slug":"/node-js/solving_promise_bottleneck/"},"excerpt":"블로그 글을 보다 나는 지금 어떻게 개발하고 있는지 궁금해서 직접 테스트해보았다. async/await를 습관적으로 쓰고 있지만, 잘 쓰고 있는지 되돌아보는 계기가 되었다. Async/Await의 병목현상 Promise의 등장으…","frontmatter":{"category":"Node.js","sub_category":null,"title":"async/await 병목현상 줄여보기","tags":["Node.js","Javascript","Promise","Async","Await","ES6"],"date":"Sep 21. 2020"},"timeToRead":3}},{"node":{"id":"bc674fee-f49f-5016-8830-e4d21968a802","fields":{"slug":"/typescript/typescript_solid_2/"},"excerpt":"Typescript 란?  Typescript는 MS에서 만든 Javascript의 상위 언어로써, 서로 다른 언어가 아니다. 컴파일 언어이자, 정적 타입 언어이다.\nJavascript는 인터프리터 언어지만, Typescript…","frontmatter":{"category":"Typescript","sub_category":null,"title":"solid하게 SOLID (2)","tags":["Typescript","OOP","SOLID","객체지향"],"date":"Sep 19. 2020"},"timeToRead":7}},{"node":{"id":"50684170-013f-52f1-87fa-b247c01d6567","fields":{"slug":"/typescript/typescript_solid_1/"},"excerpt":"OOP 란? OOP 가 뭐길래? 프로그래밍에서 필요한 데이터를 추상화시켜 상태와 행위를 가진 객체를 만들고 그 객체들 간의 유기적인 상호작용을 통해 로직을 구성하는 프로그래밍 방법이다. 왜 좋은데? 코드 재사용이 용이 존재하는 …","frontmatter":{"category":"Typescript","sub_category":null,"title":"solid하게 SOLID (1)","tags":["Typescript","OOP","SOLID","객체지향"],"date":"Sep 18. 2020"},"timeToRead":3}},{"node":{"id":"1e55851e-1a3f-588c-b0da-091d9059fd95","fields":{"slug":"/aws/about_presigned_url/"},"excerpt":"S3의 접근권한이 일 경우 버킷과 파일주소만 안다면 업로드된 파일을 자유롭게 접근가능하다. 이를 통해서 S3에 이미지 리소스를 저장한다거나 업로드되는 파일을 저장하는 방법으로 사용하고 있다. 이런 편의성은 큰 장점이지만 보안관점…","frontmatter":{"category":"AWS","sub_category":null,"title":"파일에 접근제한 부여하기 - Presigned URL","tags":["AWS","S3","CDN"],"date":"Sep 16. 2020"},"timeToRead":3}},{"node":{"id":"6048e466-b9f4-53b4-8533-c521739cdf1d","fields":{"slug":"/git/how_to_add_remote/"},"excerpt":"local에서 첫 개발을 시작하고 Github repository에 push를 할 단계가 온다. Git 초기화 위 명령어를 이용하여 git을 초기화한다. 방금 초기화 했다면 당연히 안되어 있겠지만, local 저장소가 원격저장소…","frontmatter":{"category":"git","sub_category":null,"title":"Local 저장소와 Github 연결하기","tags":["github","git"],"date":"Sep 16. 2020"},"timeToRead":1}}]}},"pageContext":{}},"staticQueryHashes":["1069093791","1381152472","1821008744","278901532","3528274121"]}